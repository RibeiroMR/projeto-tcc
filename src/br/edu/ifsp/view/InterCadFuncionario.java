/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.view;

import br.edu.ifsp.connection.Conexao;
import br.edu.ifsp.control.FuncionarioControle;
import br.edu.ifsp.model.Funcionario;
import br.edu.ifsp.util.NumberRenderer;
import br.edu.ifsp.util.SoNumero;
import br.edu.ifsp.util.ValidarCpf;
import java.awt.Component;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Murilo
 */
public class InterCadFuncionario extends javax.swing.JInternalFrame {

    Connection conexao = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    private boolean novo;
    private int rowSelectedInTable = -1;

    public InterCadFuncionario() {
        initComponents();

        txtNumero.setDocument(new SoNumero());
        txtTelefone.setDocument(new SoNumero());
        txtTelefoneSec.setDocument(new SoNumero());

        conexao = Conexao.abrir();

        listaFuncionario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollFrameFuncionario = new javax.swing.JScrollPane();
        panelFuncionario = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtEndereco = new javax.swing.JTextField();
        txtNumero = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        ftxtCpf = new javax.swing.JFormattedTextField();
        dtDataNascimento = new com.toedter.calendar.JDateChooser();
        ftxtCep = new javax.swing.JFormattedTextField();
        cboxUf = new javax.swing.JComboBox<>();
        ftxtDdd = new javax.swing.JFormattedTextField();
        ftxtDddSec = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnAlterar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableFuncionario = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        checkDefUsuario = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        pswSenha = new javax.swing.JPasswordField();
        jLabel17 = new javax.swing.JLabel();
        pswConfirmaSenha = new javax.swing.JPasswordField();
        jLabel18 = new javax.swing.JLabel();
        cboxTipoAcesso = new javax.swing.JComboBox<>();
        txtTelefone = new javax.swing.JTextField();
        txtTelefoneSec = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Funcionário");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("Cadastro de Funcionário");

        btnVoltar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(339, 339, 339)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 6, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel2.setText("Nome *");

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel4.setText("Data de Nascimento *");

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel5.setText("Endereço *");

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel6.setText("Telefone *");

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel7.setText("Bairro *");

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel8.setText("UF *");

        jLabel9.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel9.setText("CPF *");

        jLabel10.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel10.setText("CEP *");

        jLabel11.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel11.setText("Número *");

        jLabel12.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel12.setText("Cidade *");

        jLabel13.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel13.setText("Telefone Secundário");

        txtNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNome.setEnabled(false);

        txtEndereco.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtEndereco.setEnabled(false);

        txtNumero.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNumero.setEnabled(false);

        txtBairro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBairro.setEnabled(false);

        txtCidade.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCidade.setEnabled(false);

        try {
            ftxtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCpf.setEnabled(false);
        ftxtCpf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        dtDataNascimento.setDateFormatString("dd/MM/yyyy");
        dtDataNascimento.setEnabled(false);
        dtDataNascimento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        try {
            ftxtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCep.setEnabled(false);
        ftxtCep.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        cboxUf.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione um estado --", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cboxUf.setEnabled(false);

        try {
            ftxtDdd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtDdd.setEnabled(false);
        ftxtDdd.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        try {
            ftxtDddSec.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtDddSec.setEnabled(false);
        ftxtDddSec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/edu/ifsp/icons/pesquisar.png"))); // NOI18N

        txtPesquisa.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnNovo.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnGravar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.setEnabled(false);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addComponent(btnGravar)
                .addGap(18, 18, 18)
                .addComponent(btnAlterar)
                .addGap(121, 121, 121)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        tableFuncionario.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tableFuncionario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableFuncionarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableFuncionario);

        jLabel14.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel14.setText("Cargo *");

        txtCargo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCargo.setEnabled(false);

        checkDefUsuario.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        checkDefUsuario.setText("Definir como usuário");
        checkDefUsuario.setEnabled(false);
        checkDefUsuario.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkDefUsuarioItemStateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel15.setText("Login *");

        txtLogin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtLogin.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel16.setText("Senha *");

        pswSenha.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel17.setText("Confirmar Senha *");

        pswConfirmaSenha.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel18.setText("Tipo de Acesso *");

        cboxTipoAcesso.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboxTipoAcesso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Selecione tipo de acesso --", "administrador", "funcionario" }));
        cboxTipoAcesso.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtLogin)
                        .addComponent(jLabel15)
                        .addComponent(jLabel16)
                        .addComponent(pswSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                    .addComponent(jLabel17)
                    .addComponent(pswConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(cboxTipoAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pswSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pswConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboxTipoAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTelefone.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelefone.setEnabled(false);

        txtTelefoneSec.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelefoneSec.setEnabled(false);

        javax.swing.GroupLayout panelFuncionarioLayout = new javax.swing.GroupLayout(panelFuncionario);
        panelFuncionario.setLayout(panelFuncionarioLayout);
        panelFuncionarioLayout.setHorizontalGroup(
            panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCargo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelFuncionarioLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(373, 373, 373)
                                .addComponent(jLabel9))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelFuncionarioLayout.createSequentialGroup()
                                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addComponent(txtEndereco)
                                        .addGap(199, 199, 199))
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(347, 347, 347)))
                                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(dtDataNascimento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelFuncionarioLayout.createSequentialGroup()
                                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(146, 146, 146)
                                        .addComponent(ftxtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel10)
                                    .addComponent(ftxtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel6)
                                            .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                                .addComponent(ftxtDdd, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(233, 233, 233)
                                        .addComponent(ftxtDddSec, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTelefoneSec, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addGap(430, 430, 430)
                                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboxUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel13)))
                                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7))
                                        .addGap(209, 209, 209)
                                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))))
                                .addGap(43, 43, 43)
                                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(checkDefUsuario)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 289, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelFuncionarioLayout.setVerticalGroup(
            panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFuncionarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel9))
                .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboxUf, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13))
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftxtDdd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ftxtDddSec, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelefoneSec, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelFuncionarioLayout.createSequentialGroup()
                        .addGroup(panelFuncionarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkDefUsuario)
                            .addComponent(ftxtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        scrollFrameFuncionario.setViewportView(panelFuncionario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollFrameFuncionario)
                .addGap(1, 1, 1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollFrameFuncionario)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(InterCadFuncionario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limparCampos();
        novo = false;
        btnNovo.setEnabled(true);
        btnAlterar.setEnabled(true);
        habilitarCampos(false);
        btnGravar.setEnabled(false);
        btnCancelar.setEnabled(false);
        tableFuncionario.setEnabled(true);
        tableFuncionario.clearSelection();
        rowSelectedInTable = -1;
        txtPesquisa.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        pesquisarFuncionario();
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novo = true;

        btnNovo.setEnabled(false);
        btnAlterar.setEnabled(false);
        habilitarCampos(true);
        limparCampos();
        btnGravar.setEnabled(true);
        btnCancelar.setEnabled(true);

        tableFuncionario.setEnabled(false);
        tableFuncionario.clearSelection();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void tableFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFuncionarioMouseClicked
        setCampos();
    }//GEN-LAST:event_tableFuncionarioMouseClicked

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        adicionar();
        rowSelectedInTable = -1;
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // chamando metodos para alterar informação de um cliente
        if (rowSelectedInTable != -1) {
            novo = false;

            btnNovo.setEnabled(false);
            btnAlterar.setEnabled(false);
            habilitarCampos(true);
            btnGravar.setEnabled(true);
            btnCancelar.setEnabled(true);
            
            tableFuncionario.setEnabled(false);
            tableFuncionario.setRowSelectionInterval(rowSelectedInTable, rowSelectedInTable);

            txtPesquisa.setEnabled(false);
            
            txtLogin.setEnabled(checkDefUsuario.isSelected());
            pswSenha.setEnabled(checkDefUsuario.isSelected());
            pswConfirmaSenha.setEnabled(checkDefUsuario.isSelected());
            cboxTipoAcesso.setEnabled(checkDefUsuario.isSelected());
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um funcionário da lista!", "Alteração de Dados", 1);
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void checkDefUsuarioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkDefUsuarioItemStateChanged
        txtLogin.setEnabled(checkDefUsuario.isSelected());
        pswSenha.setEnabled(checkDefUsuario.isSelected());
        pswConfirmaSenha.setEnabled(checkDefUsuario.isSelected());
        cboxTipoAcesso.setEnabled(checkDefUsuario.isSelected());
    }//GEN-LAST:event_checkDefUsuarioItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cboxTipoAcesso;
    private javax.swing.JComboBox<String> cboxUf;
    private javax.swing.JCheckBox checkDefUsuario;
    private com.toedter.calendar.JDateChooser dtDataNascimento;
    private javax.swing.JFormattedTextField ftxtCep;
    private javax.swing.JFormattedTextField ftxtCpf;
    private javax.swing.JFormattedTextField ftxtDdd;
    private javax.swing.JFormattedTextField ftxtDddSec;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelFuncionario;
    private javax.swing.JPasswordField pswConfirmaSenha;
    private javax.swing.JPasswordField pswSenha;
    private javax.swing.JScrollPane scrollFrameFuncionario;
    private javax.swing.JTable tableFuncionario;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtTelefone;
    private javax.swing.JTextField txtTelefoneSec;
    // End of variables declaration//GEN-END:variables

    public void resizeColumnWidth(JTable table) {
        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++) {
            int width = 15; // Min width
            for (int row = 0; row < table.getRowCount(); row++) {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
            if (width > 300) {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }

    private void organizarJtable() {
        tableFuncionario.setDefaultEditor(Object.class, null);

        tableFuncionario.getColumnModel().getColumn(0).setMinWidth(0);
        tableFuncionario.getColumnModel().getColumn(0).setMaxWidth(0);

        tableFuncionario.getColumnModel().getColumn(13).setMinWidth(0);
        tableFuncionario.getColumnModel().getColumn(13).setMaxWidth(0);

        tableFuncionario.getColumnModel().getColumn(14).setMinWidth(0);
        tableFuncionario.getColumnModel().getColumn(14).setMaxWidth(0);

        tableFuncionario.getColumnModel().getColumn(15).setMinWidth(0);
        tableFuncionario.getColumnModel().getColumn(15).setMaxWidth(0);

        tableFuncionario.getColumnModel().getColumn(1).setHeaderValue("Nome");
        tableFuncionario.getColumnModel().getColumn(2).setHeaderValue("CPF");
        tableFuncionario.getColumnModel().getColumn(3).setHeaderValue("Data de nascimento");
        tableFuncionario.getColumnModel().getColumn(4).setHeaderValue("Endereço");
        tableFuncionario.getColumnModel().getColumn(5).setHeaderValue("Numero");
        tableFuncionario.getColumnModel().getColumn(6).setHeaderValue("Bairro");
        tableFuncionario.getColumnModel().getColumn(7).setHeaderValue("Cidade");
        tableFuncionario.getColumnModel().getColumn(8).setHeaderValue("CEP");
        tableFuncionario.getColumnModel().getColumn(9).setHeaderValue("UF");
        tableFuncionario.getColumnModel().getColumn(10).setHeaderValue("Telefone");
        tableFuncionario.getColumnModel().getColumn(11).setHeaderValue("Telefone sec.");
        tableFuncionario.getColumnModel().getColumn(12).setHeaderValue("Cargo");
//        tableFuncionario.getColumnModel().getColumn(15).setHeaderValue("Ultimo Acesso");
        tableFuncionario.getColumnModel().getColumn(16).setHeaderValue("Tipo");

        tableFuncionario.getColumnModel().getColumn(3).setCellRenderer(NumberRenderer.getDateRenderer());

        resizeColumnWidth(tableFuncionario);
    }

    private void listaFuncionario() {
        String sql = "SELECT * FROM funcionario";

        try {
            pst = conexao.prepareStatement(sql);

            rs = pst.executeQuery();

            tableFuncionario.setModel(DbUtils.resultSetToTableModel(rs));

            organizarJtable();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void pesquisarFuncionario() {
        String sql = "SELECT * FROM funcionario WHERE nome LIKE ?";

        try {
            pst = conexao.prepareStatement(sql);

            pst.setString(1, "%" + txtPesquisa.getText() + "%");

            rs = pst.executeQuery();

            tableFuncionario.setModel(DbUtils.resultSetToTableModel(rs));

            organizarJtable();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    private void limparCampos() {
        txtNome.setText(null);
        ftxtCpf.setText(null);
        dtDataNascimento.setDate(null);
        txtEndereco.setText(null);
        txtNumero.setText(null);
        txtBairro.setText(null);
        txtCidade.setText(null);
        ftxtCep.setText(null);
        cboxUf.setSelectedIndex(0);
        ftxtDdd.setText(null);
        txtTelefone.setText(null);
        ftxtDddSec.setText(null);
        txtTelefoneSec.setText(null);
        txtCargo.setText(null);
        txtLogin.setText(null);
        pswSenha.setText(null);
        pswConfirmaSenha.setText(null);
        cboxTipoAcesso.setSelectedIndex(0);
        checkDefUsuario.setSelected(false);
    }

    private void habilitarCampos(boolean habilita) {
        txtNome.setEnabled(habilita);
        ftxtCpf.setEnabled(novo);
        dtDataNascimento.setEnabled(habilita);
        txtEndereco.setEnabled(habilita);
        txtNumero.setEnabled(habilita);
        txtBairro.setEnabled(habilita);
        txtCidade.setEnabled(habilita);
        ftxtCep.setEnabled(habilita);
        cboxUf.setEnabled(habilita);
        ftxtDdd.setEnabled(habilita);
        txtTelefone.setEnabled(habilita);
        ftxtDddSec.setEnabled(habilita);
        txtTelefoneSec.setEnabled(habilita);
        txtCargo.setEnabled(habilita);
//        txtLogin.setEnabled(habilita);        
//        pswSenha.setEnabled(habilita);       
//        pswConfirmaSenha.setEnabled(habilita);
//        cboxTipoAcesso.setEnabled(habilita);
        checkDefUsuario.setEnabled(habilita);
    }

    private void setCampos() {
        rowSelectedInTable = tableFuncionario.getSelectedRow();

        limparCampos();

        txtNome.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 1).toString());
        ftxtCpf.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 2).toString());
        dtDataNascimento.setDate((Date) tableFuncionario.getModel().getValueAt(rowSelectedInTable, 3));
        txtEndereco.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 4).toString());
        txtNumero.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 5).toString());
        txtBairro.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 6).toString());
        txtCidade.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 7).toString());
        ftxtCep.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 8).toString());
        cboxUf.setSelectedItem(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 9));
        txtCargo.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 12).toString());

        String arrayTel[] = (tableFuncionario.getModel().getValueAt(rowSelectedInTable, 10).toString().split(" "));
        ftxtDdd.setText(arrayTel[0]);
        txtTelefone.setText(arrayTel[1]);

        if (!(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 11) == null)) {
            String arrayTelSec[] = (tableFuncionario.getModel().getValueAt(rowSelectedInTable, 11).toString().split(" "));
            ftxtDddSec.setText(arrayTelSec[0]);
            txtTelefoneSec.setText(arrayTelSec[1]);
        }

        if (!tableFuncionario.getModel().getValueAt(rowSelectedInTable, 13).toString().isEmpty()
                && !tableFuncionario.getModel().getValueAt(rowSelectedInTable, 14).toString().isEmpty()
                && !tableFuncionario.getModel().getValueAt(rowSelectedInTable, 16).toString().isEmpty()) {
            checkDefUsuario.setSelected(true);

            txtLogin.setEnabled(false);
            pswSenha.setEnabled(false);
            pswConfirmaSenha.setEnabled(false);
            cboxTipoAcesso.setEnabled(false);

            txtLogin.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 13).toString());
            pswSenha.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 14).toString());
            pswConfirmaSenha.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 14).toString());
            cboxTipoAcesso.setSelectedItem(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 16));
        } else {
            txtLogin.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 13).toString());
            pswSenha.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 14).toString());
            pswConfirmaSenha.setText(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 14).toString());
            cboxTipoAcesso.setSelectedItem(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 16));
        }

    }

    private void adicionar() {
        FuncionarioControle funControl = new FuncionarioControle();

        if ((txtNome.getText().isEmpty()) || (ftxtCpf.getText().isEmpty()) || (dtDataNascimento.getDate() == null)
                || (txtEndereco.getText().isEmpty()) || (txtNumero.getText().isEmpty()) || (txtBairro.getText().isEmpty()) || (txtCidade.getText().isEmpty())
                || (cboxUf.getSelectedIndex() == 0) || (ftxtCep.getText().isEmpty()) || (ftxtDdd.getText().isEmpty()) || (txtTelefone.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos obrigatórios (*) !");
        } else if ((checkDefUsuario.isSelected()) && ((txtLogin.getText().isEmpty())
                || (pswSenha.getText().isEmpty()) || (pswConfirmaSenha.getText().isEmpty()) || (cboxTipoAcesso.getSelectedIndex() == 0))) {
            JOptionPane.showMessageDialog(null, "Preencha os campos para definir usuário (*) !");
        } else if ((checkDefUsuario.isSelected()) && !(pswSenha.getText().equals(pswConfirmaSenha.getText()))) {
            JOptionPane.showMessageDialog(null, "Senha e Confirma Senha não estão iguais!");
        } else if (ValidarCpf.isCPF(ftxtCpf.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Número de CPF é inválido (*) !");
        } else {
            int op = JOptionPane.showInternalConfirmDialog(getInstance(), "Prosseguir com as inserções feitas?", "Registro do funcionário",
                    JOptionPane.YES_NO_OPTION);

            if (op == JOptionPane.YES_NO_OPTION) {
                Funcionario funcionario = new Funcionario();

                String numContato = ftxtDdd.getText() + " " + txtTelefone.getText();
                String numContatoSec = ftxtDddSec.getText() + " " + txtTelefoneSec.getText();

                System.out.println(numContato);

                funcionario.setNome(txtNome.getText());
                funcionario.setCpf(ftxtCpf.getText());

                funcionario.setDatanascimento((Date) dtDataNascimento.getDate());

                funcionario.setEndereco(txtEndereco.getText());
                funcionario.setNumero(txtNumero.getText());
                funcionario.setBairro(txtBairro.getText());
                funcionario.setCidade(txtCidade.getText());
                funcionario.setCep(ftxtCep.getText());
                funcionario.setUf(String.valueOf(cboxUf.getSelectedItem()));
                funcionario.setTelefone(numContato);
                funcionario.setTelefonesecundario(numContatoSec);
                funcionario.setCargo(txtCargo.getText());

                if (novo) {
                    if (funControl.consultarCpf(ftxtCpf.getText())) {
                        JOptionPane.showMessageDialog(null, "Há um funcionário registrado com esse CPF!");
                    } else {
                        if (checkDefUsuario.isSelected()) {
                            funcionario.setLogin(txtLogin.getText());
                            funcionario.setSenha(pswSenha.getText());
                            funcionario.setTipo(String.valueOf(cboxTipoAcesso.getSelectedItem()));
                        } else {
                            funcionario.setLogin(null);
                            funcionario.setSenha(null);
                            funcionario.setTipo(null);
                        }
                        funControl.adicionar(funcionario);
                        resetarGravar();
                    }
                } else {
                    if (!(txtLogin.getText().isEmpty()) && !(pswSenha.getText().isEmpty()) && (cboxTipoAcesso.getSelectedIndex() != 0)) {
                        funcionario.setLogin(txtLogin.getText());
                        funcionario.setSenha(pswSenha.getText());
                        funcionario.setTipo(String.valueOf(cboxTipoAcesso.getSelectedItem()));
                    }
                    funcionario.setCodigo(Integer.parseInt(tableFuncionario.getModel().getValueAt(rowSelectedInTable, 0).toString()));
                    funControl.atualizar(funcionario);
                    resetarGravar();
                }

            }
        }
    }

    private void resetarGravar() {
        limparCampos();

        tableFuncionario.setEnabled(true);
        btnNovo.setEnabled(true);
        btnAlterar.setEnabled(true);

        habilitarCampos(false);

        btnGravar.setEnabled(false);
        btnCancelar.setEnabled(false);
        
        txtPesquisa.setEnabled(true);

        listaFuncionario();
    }

    private Component getInstance() {
        return this;
    }

//    private void excluir() {
//        int confirma = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover este funcionário?", "Atenção", JOptionPane.YES_NO_OPTION);
//
//        if (confirma == JOptionPane.YES_OPTION) {
//            Funcionario funcionario = new Funcionario();
//
//            FuncionarioControle funControl = new FuncionarioControle();
//
//            String numContato = ftxtDdd.getText() + " " + txtTelefone.getText();
//            String numContatoSec = ftxtDddSec.getText() + " " + txtTelefoneSec.getText();
//
//            System.out.println(numContato);
//
//            funcionario.setNome(txtNome.getText());
//            funcionario.setCpf(ftxtCpf.getText());
//            funcionario.setDatanascimento((Date) dtDataNascimento.getDate());
//            funcionario.setEndereco(txtEndereco.getText());
//            funcionario.setNumero(txtNumero.getText());
//            funcionario.setBairro(txtBairro.getText());
//            funcionario.setCidade(txtCidade.getText());
//            funcionario.setCep(ftxtCep.getText());
//            funcionario.setUf(String.valueOf(cboxUf.getSelectedItem()));
//            funcionario.setTelefone(numContato);
//            funcionario.setTelefonesecundario(numContatoSec);
//            funcionario.setCargo(txtCargo.getText());
//            funcionario.setLogin(txtLogin.getText());
//            funcionario.setSenha(pswSenha.getText());
//            funcionario.setTipo(String.valueOf(cboxTipoAcesso.getSelectedItem()));
//
//            funcionario.setCodigo(Integer.parseInt(tableFuncionario.getModel().getValueAt(tableFuncionario.getSelectedRow(), 0).toString()));
//
//            funControl.excluir(funcionario);
//
//            limparCampos();
//
//            listaFuncionario();
//        }
//    }
}
